val kotlinVersion by extra("1.2.70")

println("Kotlin Version ${extra["kotlinVersion"]}")

buildscript {
  repositories {
        jcenter()
    }

    dependencies {
        val kotlinVersion by extra("1.2.70")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${extra["kotlinVersion"]}")
        classpath("com.github.ben-manes:gradle-versions-plugin:0.20.0")
    }
}

plugins {
    jacoco
    java
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

// apply plugin: "com.github.ben-manes.versions"

jacoco {
 toolVersion = "0.8.1"
}

group = "com.github.ligi"

repositories {
    jcenter()
}

dependencies {
        extra["kotlinVersion"] = "1.2.70"
	extra["okhttpVersion"] = "3.11.0"
    implementation("org.jetbrains.kotlin:kotlin-stdlib:${extra["kotlinVersion"]}")
    implementation("com.squareup.moshi:moshi:1.4.0")
    implementation("com.squareup.okhttp3:okhttp:${extra["okhttpVersion"]}")

    testImplementation("junit:junit:4.12")
    testImplementation("org.mockito:mockito-core:2.12.0")
    testImplementation("com.squareup.okhttp3:mockwebserver:${extra["okhttpVersion"]}")
    testImplementation("org.assertj:assertj-core:3.10.0")
}

sourceSets.all { extra["purpose"] = null }

val springVersion by extra("3.1.0.RELEASE")
val emailNotification by extra { "build@master.org" }

sourceSets {
    main {
        extra["purpose"] = "production"
    }
    test {
        extra["purpose"] = "test"
    }
    create("plugin") {
        extra["purpose"] = "production"
    }
}

tasks.register("printProperties") {
    doLast {
        println("springVersion "+springVersion)
        println(emailNotification)
        sourceSets.matching {
           it.extra["purpose"] == "production" }.forEach { println("Task production "+it.name) }
        }
}
